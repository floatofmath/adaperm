% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{bisect}
\alias{bisect}
\title{Bisection search}
\usage{
bisect(lower, upper, fun, tol = 1e-04, ...)
}
\arguments{
\item{lower}{lower bound of search range}

\item{upper}{upper bound of search range}

\item{fun}{function whose root is to be found}

\item{tol}{error tolerance}

\item{...}{additional arguments to be passed to the function}
}
\value{
root
}
\description{
Implements basic bisection search for root finding. In contrast to uniroot this can also deal with the case where the result of \code{fun} is binary - in this case the \code{bisect} finds the changepoint.
}
\examples{
set.seed(5449219)
x <- rnorm_cont(16,25,8,cshift=0,csd=24)
y <- rnorm_cont(16,19,8,cshift=0,csd=24)
cond_power_rule_norm_ts(x[1:8],y[1:8],delta=6,target=.8,rob_var=F)
nE <- cond_power_rule_norm_ts(x[1:8],y[1:8],delta=6,target=.8,rob_var=T)
xE <- rnorm_cont(nE-16,25,8,cshift=0,csd=24)
yE <- rnorm_cont(nE-16,19,8,cshift=0,csd=24)


combtest <- function(delta,alpha){
   adaptive_invnormtest_2s(c(y,yE)+delta,c(x,xE),8,16,nE,alpha=alpha)
}

bisect(-10, 10, combtest, alpha = 0.5)
}
\author{
float
}

